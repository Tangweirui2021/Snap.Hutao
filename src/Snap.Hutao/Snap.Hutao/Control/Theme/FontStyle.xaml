<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:shch="using:Snap.Hutao.Control.Helper">
    <FontFamily x:Key="MiSans">ms-appx:///Resource/Font/MiSans-Regular.ttf#MiSans</FontFamily>
    <FontFamily x:Key="CascadiaMonoAndMiSans">ms-appx:///Resource/Font/CascadiaMono.ttf#Cascadia Mono, ms-appx:///Resource/Font/MiSans-Regular.ttf#MiSans</FontFamily>

    <StaticResource x:Key="PivotHeaderItemFontFamily" ResourceKey="MiSans"/>
    <StaticResource x:Key="ContentControlThemeFontFamily" ResourceKey="MiSans"/>

    <Style BasedOn="{StaticResource BodyTextBlockStyle}" TargetType="TextBlock"/>
    <Style x:Key="BaseTextBlockStyle" TargetType="TextBlock">
        <Setter Property="FontFamily" Value="{StaticResource MiSans}"/>
        <Setter Property="FontSize" Value="{StaticResource BodyTextBlockFontSize}"/>
        <Setter Property="FontWeight" Value="SemiBold"/>
        <Setter Property="TextTrimming" Value="CharacterEllipsis"/>
        <Setter Property="TextWrapping" Value="Wrap"/>
        <Setter Property="LineStackingStrategy" Value="MaxHeight"/>
        <Setter Property="TextLineBounds" Value="Full"/>
    </Style>
    <Style
        x:Key="HeaderTextBlockStyle"
        BasedOn="{StaticResource BaseTextBlockStyle}"
        TargetType="TextBlock">
        <Setter Property="FontSize" Value="46"/>
        <Setter Property="FontWeight" Value="Light"/>
        <Setter Property="OpticalMarginAlignment" Value="TrimSideBearings"/>
    </Style>
    <Style
        x:Key="SubheaderTextBlockStyle"
        BasedOn="{StaticResource BaseTextBlockStyle}"
        TargetType="TextBlock">
        <Setter Property="FontSize" Value="34"/>
        <Setter Property="FontWeight" Value="Light"/>
        <Setter Property="OpticalMarginAlignment" Value="TrimSideBearings"/>
    </Style>
    <Style
        x:Key="TitleTextBlockStyle"
        BasedOn="{StaticResource BaseTextBlockStyle}"
        TargetType="TextBlock">
        <Setter Property="FontSize" Value="{StaticResource TitleTextBlockFontSize}"/>
        <Setter Property="OpticalMarginAlignment" Value="TrimSideBearings"/>
    </Style>
    <Style
        x:Key="SubtitleTextBlockStyle"
        BasedOn="{StaticResource BaseTextBlockStyle}"
        TargetType="TextBlock">
        <Setter Property="FontSize" Value="{StaticResource SubtitleTextBlockFontSize}"/>
        <Setter Property="OpticalMarginAlignment" Value="TrimSideBearings"/>
    </Style>
    <Style
        x:Key="BodyTextBlockStyle"
        BasedOn="{StaticResource BaseTextBlockStyle}"
        TargetType="TextBlock">
        <Setter Property="FontWeight" Value="Normal"/>
    </Style>
    <Style
        x:Key="CaptionTextBlockStyle"
        BasedOn="{StaticResource BaseTextBlockStyle}"
        TargetType="TextBlock">
        <Setter Property="FontSize" Value="{StaticResource CaptionTextBlockFontSize}"/>
        <Setter Property="FontWeight" Value="Normal"/>
    </Style>
    <Style
        x:Key="BodyStrongTextBlockStyle"
        BasedOn="{StaticResource BaseTextBlockStyle}"
        TargetType="TextBlock">
        <Setter Property="FontSize" Value="{StaticResource BodyStrongTextBlockFontSize}"/>
    </Style>
    <Style
        x:Key="TitleLargeTextBlockStyle"
        BasedOn="{StaticResource BaseTextBlockStyle}"
        TargetType="TextBlock">
        <Setter Property="FontSize" Value="{StaticResource TitleLargeTextBlockFontSize}"/>
        <Setter Property="OpticalMarginAlignment" Value="TrimSideBearings"/>
    </Style>
    <Style
        x:Key="DisplayTextBlockStyle"
        BasedOn="{StaticResource BaseTextBlockStyle}"
        TargetType="TextBlock">
        <Setter Property="FontSize" Value="{StaticResource DisplayTextBlockFontSize}"/>
        <Setter Property="OpticalMarginAlignment" Value="TrimSideBearings"/>
    </Style>

    <x:Double x:Key="SecondaryTextFontSize">12</x:Double>

    <Style x:Key="SecondaryTextStyle" TargetType="TextBlock">
        <Setter Property="FontSize" Value="{StaticResource SecondaryTextFontSize}"/>
        <Setter Property="Foreground" Value="{ThemeResource TextFillColorSecondaryBrush}"/>
    </Style>

    <Style BasedOn="{StaticResource DefaultMenuFlyoutItemStyle}" TargetType="MenuFlyoutItem">
        <Setter Property="FontFamily" Value="{StaticResource MiSans}"/>
    </Style>

    <Style BasedOn="{StaticResource DefaultMenuFlyoutSubItemStyle}" TargetType="MenuFlyoutSubItem">
        <Setter Property="FontFamily" Value="{StaticResource MiSans}"/>
    </Style>

    <Style BasedOn="{StaticResource DefaultScrollViewerStyle}" TargetType="ScrollViewer">
        <Setter Property="FontFamily" Value="{StaticResource MiSans}"/>
    </Style>
    <!--  TODO: When will DefaultInfoBarStyle added  -->
    <Style TargetType="InfoBar">
        <Setter Property="shch:InfoBarHelper.IsTextSelectionEnabled" Value="False"/>
        <Setter Property="FontFamily" Value="{StaticResource MiSans}"/>
        <Setter Property="IsTabStop" Value="False"/>
        <Setter Property="CloseButtonStyle" Value="{StaticResource InfoBarCloseButtonStyle}"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderBrush" Value="{ThemeResource InfoBarBorderBrush}"/>
        <Setter Property="BorderThickness" Value="{ThemeResource InfoBarBorderThickness}"/>
        <Setter Property="AutomationProperties.LandmarkType" Value="Custom"/>
        <Setter Property="AutomationProperties.IsDialog" Value="True"/>
        <Setter Property="CornerRadius" Value="{ThemeResource ControlCornerRadius}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="InfoBar">
                    <Border
                        x:Name="ContentRoot"
                        VerticalAlignment="Top"
                        Background="{ThemeResource InfoBarInformationalSeverityBackgroundBrush}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        CornerRadius="{TemplateBinding CornerRadius}">
                        <!--  Background is used here so that it overrides the severity status color if set.  -->
                        <Grid
                            MinHeight="{ThemeResource InfoBarMinHeight}"
                            Padding="{StaticResource InfoBarContentRootPadding}"
                            HorizontalAlignment="Stretch"
                            Background="{TemplateBinding Background}"
                            CornerRadius="{TemplateBinding CornerRadius}">

                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <!--  Icon  -->
                                <ColumnDefinition Width="*"/>
                                <!--  Title, message, and action  -->
                                <ColumnDefinition Width="Auto"/>
                                <!--  Close button  -->
                            </Grid.ColumnDefinitions>

                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>
                            <Grid x:Name="StandardIconArea" Visibility="Collapsed">
                                <TextBlock
                                    x:Name="IconBackground"
                                    Grid.Column="0"
                                    Margin="{StaticResource InfoBarIconMargin}"
                                    VerticalAlignment="Top"
                                    AutomationProperties.AccessibilityView="Raw"
                                    FontFamily="{ThemeResource SymbolThemeFontFamily}"
                                    FontSize="{StaticResource InfoBarIconFontSize}"
                                    Foreground="{ThemeResource InfoBarInformationalSeverityIconBackground}"
                                    Text="{StaticResource InfoBarIconBackgroundGlyph}"/>
                                <TextBlock
                                    x:Name="StandardIcon"
                                    Grid.Column="0"
                                    Margin="{StaticResource InfoBarIconMargin}"
                                    VerticalAlignment="Top"
                                    FontFamily="{ThemeResource SymbolThemeFontFamily}"
                                    FontSize="{StaticResource InfoBarIconFontSize}"
                                    Foreground="{ThemeResource InfoBarInformationalSeverityIconForeground}"
                                    Text="{StaticResource InfoBarInformationalIconGlyph}"/>
                            </Grid>
                            <Viewbox
                                x:Name="UserIconBox"
                                Grid.Column="0"
                                MaxWidth="{ThemeResource InfoBarIconFontSize}"
                                MaxHeight="{ThemeResource InfoBarIconFontSize}"
                                Margin="{ThemeResource InfoBarIconMargin}"
                                VerticalAlignment="Top"
                                Child="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.IconElement}"
                                Visibility="Collapsed"/>
                            <InfoBarPanel
                                Grid.Column="1"
                                Margin="{StaticResource InfoBarPanelMargin}"
                                HorizontalOrientationPadding="{StaticResource InfoBarPanelHorizontalOrientationPadding}"
                                VerticalOrientationPadding="{StaticResource InfoBarPanelVerticalOrientationPadding}">
                                <TextBlock
                                    x:Name="Title"
                                    FontSize="{StaticResource InfoBarTitleFontSize}"
                                    FontWeight="{StaticResource InfoBarTitleFontWeight}"
                                    Foreground="{ThemeResource InfoBarTitleForeground}"
                                    InfoBarPanel.HorizontalOrientationMargin="{StaticResource InfoBarTitleHorizontalOrientationMargin}"
                                    InfoBarPanel.VerticalOrientationMargin="{StaticResource InfoBarTitleVerticalOrientationMargin}"
                                    IsTextSelectionEnabled="{TemplateBinding shch:InfoBarHelper.IsTextSelectionEnabled}"
                                    Text="{TemplateBinding Title}"
                                    TextWrapping="WrapWholeWords"/>
                                <TextBlock
                                    x:Name="Message"
                                    FontSize="{StaticResource InfoBarMessageFontSize}"
                                    FontWeight="{StaticResource InfoBarMessageFontWeight}"
                                    Foreground="{ThemeResource InfoBarMessageForeground}"
                                    InfoBarPanel.HorizontalOrientationMargin="{StaticResource InfoBarMessageHorizontalOrientationMargin}"
                                    InfoBarPanel.VerticalOrientationMargin="{StaticResource InfoBarMessageVerticalOrientationMargin}"
                                    IsTextSelectionEnabled="{TemplateBinding shch:InfoBarHelper.IsTextSelectionEnabled}"
                                    Text="{TemplateBinding Message}"
                                    TextWrapping="WrapWholeWords"/>
                                <ContentPresenter
                                    VerticalAlignment="Top"
                                    Content="{TemplateBinding ActionButton}"
                                    InfoBarPanel.HorizontalOrientationMargin="{StaticResource InfoBarActionHorizontalOrientationMargin}"
                                    InfoBarPanel.VerticalOrientationMargin="{StaticResource InfoBarActionVerticalOrientationMargin}">
                                    <ContentPresenter.Resources>
                                        <Style BasedOn="{StaticResource DefaultHyperlinkButtonStyle}" TargetType="HyperlinkButton">
                                            <Style.Setters>
                                                <Setter Property="Margin" Value="{StaticResource InfoBarHyperlinkButtonMargin}"/>
                                                <Setter Property="Foreground" Value="{ThemeResource InfoBarHyperlinkButtonForeground}"/>
                                            </Style.Setters>
                                        </Style>
                                    </ContentPresenter.Resources>
                                </ContentPresenter>
                            </InfoBarPanel>
                            <ContentPresenter
                                Grid.Row="1"
                                Grid.Column="1"
                                Content="{TemplateBinding Content}"
                                ContentTemplate="{TemplateBinding ContentTemplate}"/>
                            <Button
                                Name="CloseButton"
                                Grid.Column="2"
                                Command="{TemplateBinding CloseButtonCommand}"
                                CommandParameter="{TemplateBinding CloseButtonCommandParameter}"
                                Style="{TemplateBinding CloseButtonStyle}">
                                <Button.Resources>
                                    <ResourceDictionary>
                                        <ResourceDictionary.ThemeDictionaries>
                                            <ResourceDictionary x:Key="Default">
                                                <StaticResource x:Key="ButtonBackground" ResourceKey="AppBarButtonBackground"/>
                                                <StaticResource x:Key="ButtonBackgroundPointerOver" ResourceKey="AppBarButtonBackgroundPointerOver"/>
                                                <StaticResource x:Key="ButtonBackgroundPressed" ResourceKey="AppBarButtonBackgroundPressed"/>
                                                <StaticResource x:Key="ButtonBackgroundDisabled" ResourceKey="AppBarButtonBackgroundDisabled"/>
                                                <StaticResource x:Key="ButtonForeground" ResourceKey="AppBarButtonForeground"/>
                                                <StaticResource x:Key="ButtonForegroundPointerOver" ResourceKey="AppBarButtonForegroundPointerOver"/>
                                                <StaticResource x:Key="ButtonForegroundPressed" ResourceKey="AppBarButtonForegroundPressed"/>
                                                <StaticResource x:Key="ButtonForegroundDisabled" ResourceKey="AppBarButtonForegroundDisabled"/>
                                                <StaticResource x:Key="ButtonBorderBrush" ResourceKey="AppBarButtonBorderBrush"/>
                                                <StaticResource x:Key="ButtonBorderBrushPointerOver" ResourceKey="AppBarButtonBorderBrushPointerOver"/>
                                                <StaticResource x:Key="ButtonBorderBrushPressed" ResourceKey="AppBarButtonBorderBrushPressed"/>
                                                <StaticResource x:Key="ButtonBorderBrushDisabled" ResourceKey="AppBarButtonBorderBrushDisabled"/>
                                            </ResourceDictionary>
                                            <ResourceDictionary x:Key="HighContrast">
                                                <StaticResource x:Key="ButtonBackground" ResourceKey="AppBarButtonBackground"/>
                                                <StaticResource x:Key="ButtonBackgroundPointerOver" ResourceKey="AppBarButtonBackgroundPointerOver"/>
                                                <StaticResource x:Key="ButtonBackgroundPressed" ResourceKey="AppBarButtonBackgroundPressed"/>
                                                <StaticResource x:Key="ButtonBackgroundDisabled" ResourceKey="AppBarButtonBackgroundDisabled"/>
                                                <StaticResource x:Key="ButtonForeground" ResourceKey="AppBarButtonForeground"/>
                                                <StaticResource x:Key="ButtonForegroundPointerOver" ResourceKey="AppBarButtonForegroundPointerOver"/>
                                                <StaticResource x:Key="ButtonForegroundPressed" ResourceKey="AppBarButtonForegroundPressed"/>
                                                <StaticResource x:Key="ButtonForegroundDisabled" ResourceKey="AppBarButtonForegroundDisabled"/>
                                                <StaticResource x:Key="ButtonBorderBrush" ResourceKey="AppBarButtonBorderBrush"/>
                                                <StaticResource x:Key="ButtonBorderBrushPointerOver" ResourceKey="AppBarButtonBorderBrushPointerOver"/>
                                                <StaticResource x:Key="ButtonBorderBrushPressed" ResourceKey="AppBarButtonBorderBrushPressed"/>
                                                <StaticResource x:Key="ButtonBorderBrushDisabled" ResourceKey="AppBarButtonBorderBrushDisabled"/>
                                            </ResourceDictionary>
                                            <ResourceDictionary x:Key="Light">
                                                <StaticResource x:Key="ButtonBackground" ResourceKey="AppBarButtonBackground"/>
                                                <StaticResource x:Key="ButtonBackgroundPointerOver" ResourceKey="AppBarButtonBackgroundPointerOver"/>
                                                <StaticResource x:Key="ButtonBackgroundPressed" ResourceKey="AppBarButtonBackgroundPressed"/>
                                                <StaticResource x:Key="ButtonBackgroundDisabled" ResourceKey="AppBarButtonBackgroundDisabled"/>
                                                <StaticResource x:Key="ButtonForeground" ResourceKey="AppBarButtonForeground"/>
                                                <StaticResource x:Key="ButtonForegroundPointerOver" ResourceKey="AppBarButtonForegroundPointerOver"/>
                                                <StaticResource x:Key="ButtonForegroundPressed" ResourceKey="AppBarButtonForegroundPressed"/>
                                                <StaticResource x:Key="ButtonForegroundDisabled" ResourceKey="AppBarButtonForegroundDisabled"/>
                                                <StaticResource x:Key="ButtonBorderBrush" ResourceKey="AppBarButtonBorderBrush"/>
                                                <StaticResource x:Key="ButtonBorderBrushPointerOver" ResourceKey="AppBarButtonBorderBrushPointerOver"/>
                                                <StaticResource x:Key="ButtonBorderBrushPressed" ResourceKey="AppBarButtonBorderBrushPressed"/>
                                                <StaticResource x:Key="ButtonBorderBrushDisabled" ResourceKey="AppBarButtonBorderBrushDisabled"/>
                                            </ResourceDictionary>
                                        </ResourceDictionary.ThemeDictionaries>
                                    </ResourceDictionary>
                                </Button.Resources>
                                <Viewbox
                                    Width="{StaticResource InfoBarCloseButtonGlyphSize}"
                                    Height="{StaticResource InfoBarCloseButtonGlyphSize}"
                                    HorizontalAlignment="Center"
                                    VerticalAlignment="Center">
                                    <SymbolIcon Symbol="{StaticResource InfoBarCloseButtonSymbol}"/>
                                </Viewbox>
                            </Button>

                        </Grid>

                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="SeverityLevels">
                                <VisualState x:Name="Informational"/>
                                <VisualState x:Name="Error">
                                    <VisualState.Setters>
                                        <Setter Target="ContentRoot.Background" Value="{ThemeResource InfoBarErrorSeverityBackgroundBrush}"/>
                                        <Setter Target="IconBackground.Foreground" Value="{ThemeResource InfoBarErrorSeverityIconBackground}"/>
                                        <Setter Target="StandardIcon.Text" Value="{StaticResource InfoBarErrorIconGlyph}"/>
                                        <Setter Target="StandardIcon.Foreground" Value="{ThemeResource InfoBarErrorSeverityIconForeground}"/>

                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="Warning">
                                    <VisualState.Setters>
                                        <Setter Target="ContentRoot.Background" Value="{ThemeResource InfoBarWarningSeverityBackgroundBrush}"/>
                                        <Setter Target="IconBackground.Foreground" Value="{ThemeResource InfoBarWarningSeverityIconBackground}"/>
                                        <Setter Target="StandardIcon.Text" Value="{StaticResource InfoBarWarningIconGlyph}"/>
                                        <Setter Target="StandardIcon.Foreground" Value="{ThemeResource InfoBarWarningSeverityIconForeground}"/>

                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="Success">
                                    <VisualState.Setters>
                                        <Setter Target="ContentRoot.Background" Value="{ThemeResource InfoBarSuccessSeverityBackgroundBrush}"/>
                                        <Setter Target="IconBackground.Foreground" Value="{ThemeResource InfoBarSuccessSeverityIconBackground}"/>
                                        <Setter Target="StandardIcon.Text" Value="{StaticResource InfoBarSuccessIconGlyph}"/>
                                        <Setter Target="StandardIcon.Foreground" Value="{ThemeResource InfoBarSuccessSeverityIconForeground}"/>

                                    </VisualState.Setters>
                                </VisualState>

                            </VisualStateGroup>
                            <VisualStateGroup x:Name="IconStates">
                                <VisualState x:Name="StandardIconVisible">
                                    <VisualState.Setters>
                                        <Setter Target="UserIconBox.Visibility" Value="Collapsed"/>
                                        <Setter Target="StandardIconArea.Visibility" Value="Visible"/>

                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="UserIconVisible">
                                    <VisualState.Setters>
                                        <Setter Target="UserIconBox.Visibility" Value="Visible"/>
                                        <Setter Target="StandardIconArea.Visibility" Value="Collapsed"/>

                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="NoIconVisible"/>

                            </VisualStateGroup>
                            <VisualStateGroup>
                                <VisualState x:Name="CloseButtonVisible"/>
                                <VisualState x:Name="CloseButtonCollapsed">
                                    <VisualState.Setters>
                                        <Setter Target="CloseButton.Visibility" Value="Collapsed"/>

                                    </VisualState.Setters>
                                </VisualState>

                            </VisualStateGroup>
                            <VisualStateGroup x:Name="InfoBarVisibility">
                                <VisualState x:Name="InfoBarVisible"/>
                                <VisualState x:Name="InfoBarCollapsed">
                                    <VisualState.Setters>
                                        <Setter Target="ContentRoot.Visibility" Value="Collapsed"/>

                                    </VisualState.Setters>
                                </VisualState>

                            </VisualStateGroup>
                            <VisualStateGroup>
                                <VisualState x:Name="ForegroundNotSet"/>
                                <VisualState x:Name="ForegroundSet">
                                    <VisualState.Setters>
                                        <Setter Target="Title.Foreground" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Foreground}"/>
                                        <Setter Target="Message.Foreground" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Foreground}"/>

                                    </VisualState.Setters>
                                </VisualState>

                            </VisualStateGroup>

                        </VisualStateManager.VisualStateGroups>
                    </Border>

                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>
